name: CI/CD for .NET

on:
  push:
    branches-ignore:
      - main
      - develop 
  pull_request:
    branches:
      - develop
      - main
    types:
      - opened
      - synchronize
      - reopened
      - closed 

jobs:
  build-and-test:
    name: Compile and execute
    runs-on: ubuntu-latest

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.100'

      - name: Restore dependencies
        run: |
          dotnet restore src/E-MoveBCN-back.csproj
          dotnet restore E-MoveBCN.Tests/E-MoveBCN.Tests.csproj

      - name: Compile project
        run: dotnet build src/E-MoveBCN-back.csproj --configuration Release --no-restore

     # - name: Build test project
    #  run: dotnet build E-MoveBCN.Tests/E-MoveBCN.Tests.csproj --configuration Release --no-restore

      #- name: Execute tests
      #  run: dotnet test E-MoveBCN.Tests/E-MoveBCN.Tests.csproj --configuration Release --no-build --verbosity normal

  deploy:
    name: Desplegar en Servidor (solo en main)
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.ref == 'refs/heads/main'

    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Configurar .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.100'

      - name: Publicar la aplicaci√≥n
        run: dotnet publish src/E-MoveBCN-back.csproj -c Release -o app_publish

      - name: Desplegar en el servidor
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          curl -X POST $RENDER_DEPLOY_HOOK
